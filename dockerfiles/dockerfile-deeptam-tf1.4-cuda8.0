# syntax=docker/dockerfile:1

FROM tensorflow/tensorflow:1.4.0-devel-gpu-py3

ARG USERNAME=cfi
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd -g $USER_GID $USERNAME \
    && useradd -u $USER_UID -g $USER_GID -ms /bin/bash $USERNAME

RUN apt update; exit 0
RUN apt install -y sudo \
    && printf "$USERNAME ALL=(root) NOPASSWD:ALL\n" > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

USER $USERNAME
WORKDIR /home/$USERNAME

RUN sudo apt -y install python3-minieigen python3-tk git

RUN sudo pip install --upgrade pip setuptools wheel
RUN pip install scikit-image

RUN wget https://github.com/Kitware/CMake/releases/download/v3.12.1/cmake-3.12.1-Linux-x86_64.tar.gz
RUN tar -xf cmake-3.12.1-Linux-x86_64.tar.gz && rm cmake-3.12.1-Linux-x86_64.tar.gz
RUN mv cmake-3.12.1-Linux-x86_64 cmake && sed -i '$a export PATH=$HOME/cmake/bin${PATH:+:${PATH}}' .bashrc

RUN git clone -b deeptam https://github.com/lmb-freiburg/lmbspecialops.git
RUN cd lmbspecialops \
    && sed -i 's/\(PythonInterp\)/\1 3/g' src/CMakeLists.txt \
    && sed -i '41c execute_process( COMMAND "printf" "/usr/local/lib/python3.5/dist-packages/tensorflow/include" ' src/CMakeLists.txt \
    && sed -i '43c execute_process( COMMAND "printf" "/usr/local/lib/python3.5/dist-packages/tensorflow" ' src/CMakeLists.txt \
    && mkdir build && cd build && $HOME/cmake/bin/cmake .. && make
RUN sed -i '$a export LMBSPECIALOPS_LIB=$HOME/lmbspecialops/build/lib/lmbspecialops.so' .bashrc
RUN cd lmbspecialops/python && sed -i " 23c _lib_path = os.environ['LMBSPECIALOPS_LIB']" lmbspecialops.py && sudo ln -sr lmbspecialops.py /usr/local/lib/python3.5/dist-packages/

RUN git clone https://github.com/lmb-freiburg/deeptam.git
RUN cd deeptam \
    && sudo ln -sr tracking/python/deeptam_tracker /usr/local/lib/python3.5/dist-packages/ \
    && sudo ln -sr mapping/python/deeptam_mapper /usr/local/lib/python3.5/dist-packages/ \
    && cd tracking/data && ./download_testdata.sh \
    && cd ../weights && ./download_weights.sh

RUN sudo DEBIAN_FRONTEND=noninteractive apt -y install x11vnc xinit xserver-xorg-video-dummy xfce4
RUN printf 'XTerm*vt100.faceName:xft:Consolas:size=16:antialias=true:style=Regular\nXTerm*vt100.boldFont:xft:Consolas:size=16:antialias=true:style=Bold\n' > .Xresources
RUN cp /etc/X11/xinit/xinitrc .xinitrc
RUN printf '\nunset SESSION_MANAGER\nunset DBUS_SESSION_BUS_ADDRESS\nexec startxfce4\n' >> .xinitrc
RUN sudo mkdir /etc/X11/xorg.conf.d
RUN printf 'Section "Monitor"\n        Identifier "dummy_monitor"\n        HorizSync 28.0-80.0\n        VertRefresh 48.0-75.0\n        Modeline "1920x1080" 172.80 1920 2040 2248 2576 1080 1081 1084 1118\nEndSection\n\nSection "Device"\n        Identifier "dummy_card"\n        VideoRam 256000\n        Driver "dummy"\nEndSection\n\nSection "Screen"\n        Identifier "dummy_screen"\n        Device "dummy_card"\n        Monitor "dummy_monitor"\n        SubSection "Display"\n        EndSubSection\nEndSection\n' | sudo tee /etc/X11/xorg.conf.d/10-headless.conf

RUN sudo apt -y install vim mousepad viewnior vlc

COPY entrypoint.sh /
RUN sudo chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD bash